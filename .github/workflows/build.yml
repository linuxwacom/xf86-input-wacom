on: [ push, pull_request ]

env:
  CFLAGS: -Werror -Wall -Wextra -Wno-error=sign-compare -Wno-unused-parameter
  UBUNTU_PACKAGES: xutils-dev xserver-xorg-dev libx11-dev libxi-dev libxrandr-dev libxinerama-dev libudev-dev
  PIP_PACKAGES: meson ninja

jobs:
  compile-with-autotools:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        compiler: [ gcc, clang ]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - uses: linuxwacom/libwacom/.github/actions/pkginstall@master
        with:
          apt: $UBUNTU_PACKAGES

      - name: Build the driver
        run: |
          mkdir -p _build
          pushd _build > /dev/null
          # We don't want our CFLAGS (especially -Werror) to apply at `configure`
          # time so short-circuit our environment at that moment and provide the
          # flags to `make` instead. Not doing so results in an incorrect config:
          # 'checking for rint in -lm... no' because of a builtin-declaration-mismatch
          # warning (error) in the auto-generated feature test.
          CFLAGS="" CC="${{ matrix.compiler }}" ../autogen.sh --disable-silent-rules
          make CFLAGS="$CFLAGS"
          popd > /dev/null

      - name: Run unit tests
        run: |
          pushd _build > /dev/null
          make check || (cat **/test-suite.log && false)
          popd > /dev/null

      - name: Run distcheck
        run: |
          pushd _build > /dev/null
          make distcheck
          popd > /dev/null
  compile-with-meson:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        compiler:
          - gcc
          - clang
        meson_options:
          - ''
          # clang requires b_lundef=false for b_santize, see
          # https://github.com/mesonbuild/meson/issues/764
          - '-Db_sanitize=address,undefined -Db_lundef=false'
    steps:
      - uses: actions/checkout@v2
      # install python so we get pip for meson
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - uses: linuxwacom/libwacom/.github/actions/pkginstall@master
        with:
          apt: $UBUNTU_PACKAGES
          pip: $PIP_PACKAGES
      - name: meson test ${{matrix.meson_options}}
        uses: linuxwacom/libwacom/./.github/actions/meson@master
        with:
          meson_args: ${{matrix.meson_options}}
        env:
          CC: ${{matrix.compiler}}
      # Capture all the meson logs, even if we failed
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}  # even if we fail
        with:
          name: meson test logs
          path: |
            builddir/meson-logs/testlog*.txt
            builddir/meson-logs/meson-log.txt

